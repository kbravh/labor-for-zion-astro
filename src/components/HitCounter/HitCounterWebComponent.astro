---

---

<script>
  import { actions } from 'astro:actions';

  class HitCounter extends HTMLElement {
    displayText: string | null | undefined;
    locale: string | null | undefined;
    slug: string | null | undefined;

    // This gets called when the element is inserted into the DOM.
    connectedCallback() {
      this.displayText = this.getAttribute('data-display-text');
      if (!this.displayText) throw new Error('data-display-text is missing');

      this.locale = this.getAttribute('data-locale');
      if (!this.locale) throw new Error('data-locale is missing');

      this.slug = this.getAttribute('data-slug');
      if (!this.slug) throw new Error('data-slug is missing');

      this.fetchAndDisplayCount();
    }

    async fetchAndDisplayCount() {
      if (!this.slug || !this.locale) {
        console.error('Hit counter: missing data attributes');
        return;
      }

      if (process.env.NODE_ENV === 'development') {
        console.info(`Hit counter: ${this.slug} - ${this.locale}`);
        this.displayCount(1123);
        return;
      }

      const logResponse = await actions.logPageView({
        slug: this.slug,
        locale: this.locale,
      });
      if (logResponse.error) {
        console.error(logResponse.error);
        return;
      }
      const countResponse = await actions.getPageViews({
        slug: this.slug,
        locale: this.locale,
      });
      if (countResponse.error) {
        console.error(countResponse.error);
        return;
      }
      this.displayCount(countResponse.data);
    }

    displayCount(count: number) {
      this.textContent = `${this.displayText}: ${count}`;
    }
  }

  customElements.define('hit-counter', HitCounter);
</script>
