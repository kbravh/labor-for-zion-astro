---
import { getRelativeLocaleUrl } from "astro:i18n";
import Link from "@components/interaction/Link.astro";
import { getLocale } from "@utils/i18n/main";
import { translations } from "@utils/i18n/translations";
import { getTranslationMap } from "@utils/md/readAndParse";
import type { Locale } from "@validation/i18n";
import { LOCALES } from "@validation/i18n";

const locale = getLocale(Astro.currentLocale);
const url = Astro.url.pathname;
// We have to remove the locale if it's here. Otherwise, we get into
// odd situations where the language switcher will try to take you to
// /es/es/about
const urlWithoutLocale = url.replace(`/${locale}`, "");
const urlMap: Record<Locale, string> = {
	en: urlWithoutLocale,
	es: urlWithoutLocale,
};
for (const lang of LOCALES) {
	// get the slug of the page and check for it in the translation map
	const translationMap = await getTranslationMap(lang);
	const slug = urlWithoutLocale.split("/").filter(Boolean).pop();
	if (!slug) {
		continue;
	}
	// if there are translations available, replace the urls
	const translations = translationMap[slug];
	if (!translations) {
		continue;
	}
	for (const [locale, slug] of Object.entries(translations)) {
		urlMap[locale as Locale] = `/notes/${slug}`;
	}
}
---

<details
  class:list={[
    'relative inline-flex items-center rounded-md select-none shadow-sm',
    'bg-white text-slate-700 ring-1 ring-slate-200 hover:ring-slate-300',
    'dark:bg-slate-800 dark:text-slate-200 dark:ring-slate-700 dark:hover:ring-slate-600',
  ]}
  style="transition: background-color 0ms, color 0ms, box-shadow 0ms;"
>
  <summary
    class:list={[
      'px-3 py-2 flex items-center gap-x-2 list-none cursor-pointer',
      'hover:bg-slate-50 dark:hover:bg-slate-700',
      'focus:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-emerald-500',
      'transition-colors duration-150',
    ]}
  >
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width="20"
      height="20"
      fill="currentColor"
      viewBox="0 0 256 256"
      class="text-emerald-600 dark:text-emerald-400"
    >
      <title>{translations[locale].localization.change_language}</title><path
        d="M247.15,212.42l-56-112a8,8,0,0,0-14.31,0l-21.71,43.43A88,88,0,0,1,108,126.93,103.65,103.65,0,0,0,135.69,64H160a8,8,0,0,0,0-16H104V32a8,8,0,0,0-16,0V48H32a8,8,0,0,0,0,16h87.63A87.76,87.76,0,0,1,96,116.35a87.74,87.74,0,0,1-19-31,8,8,0,1,0-15.08,5.34A103.63,103.63,0,0,0,84,127a87.55,87.55,0,0,1-52,17,8,8,0,0,0,0,16,103.46,103.46,0,0,0,64-22.08,104.18,104.18,0,0,0,51.44,21.31l-26.6,53.19a8,8,0,0,0,14.31,7.16L148.94,192h70.11l13.79,27.58A8,8,0,0,0,240,224a8,8,0,0,0,7.15-11.58ZM156.94,176,184,121.89,211.05,176Z"
      ></path>
    </svg>
    <span class="sr-only">{translations[locale].localization.change_language}</span>
  </summary>
  <div
    class:list={[
      'absolute w-48 right-0 mt-2 z-10 origin-top-right rounded-md overflow-hidden',
      'bg-white shadow-lg ring-1 ring-black ring-opacity-5',
      'dark:bg-slate-800 dark:ring-slate-700',
      '[details:not([open])_&]:hidden',
    ]}
  >
    <ul class="py-1">
      <li>
        <Link 
          className="block w-full px-4 py-2 text-sm text-slate-700 hover:bg-slate-100 hover:text-slate-900 transition-colors duration-150 dark:text-slate-200 dark:hover:bg-slate-700 dark:hover:text-white" 
          href={getRelativeLocaleUrl('en', urlMap['en'])}
        >
          {translations[locale].localization.english}
        </Link>
      </li>
      <li>
        <Link 
          className="block w-full px-4 py-2 text-sm text-slate-700 hover:bg-slate-100 hover:text-slate-900 transition-colors duration-150 dark:text-slate-200 dark:hover:bg-slate-700 dark:hover:text-white" 
          href={getRelativeLocaleUrl('es', urlMap['es'])}
        >
          {translations[locale].localization.spanish}
        </Link>
      </li>
    </ul>
  </div>
</details>

<style>
  /* Remove default disclosure triangle in Chrome, Safari, etc */
  details > summary::-webkit-details-marker {
    display: none;
  }
  
  /* Remove default disclosure triangle in Firefox */
  details > summary {
    list-style: none;
  }
</style>

<script>
  // Progressive enhancement: close the details when clicking outside
  document.addEventListener('astro:page-load', () => {
    const languageSwitcher = document.querySelector('details') as HTMLDetailsElement;
    
    if (languageSwitcher) {
      // Handle clicks outside the details element
      document.addEventListener('click', (event) => {
        // Check if the details is open and the click was outside it
        if (
          languageSwitcher.hasAttribute('open') && 
          event.target instanceof Node &&
          !languageSwitcher.contains(event.target)
        ) {
          languageSwitcher.removeAttribute('open');
        }
      });
      
      // Close on escape key press
      document.addEventListener('keydown', (event) => {
        if (event.key === 'Escape' && languageSwitcher.hasAttribute('open')) {
          languageSwitcher.removeAttribute('open');
        }
      });
    }
  });
</script>
