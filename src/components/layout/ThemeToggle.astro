---
import { getLocale } from "@utils/i18n/main";
import { translations } from "@utils/i18n/translations";

const locale = getLocale(Astro.currentLocale);
const strings = {
	switchToLight: translations[locale].ui.switch_to_light_mode,
	switchToDark: translations[locale].ui.switch_to_dark_mode,
};
---

<button
  id="theme-toggle"
  type="button"
  class="inline-flex items-center rounded-md p-2 text-slate-700 hover:bg-slate-100 dark:text-slate-300 dark:hover:bg-slate-700 focus:outline-none focus-visible:ring-2 focus-visible:ring-emerald-500 transition-colors"
  aria-label={strings.switchToDark}
>
  <svg
    id="theme-toggle-light-icon"
    class="w-5 h-5 hidden"
    fill="currentColor"
    viewBox="0 0 20 20"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      d="M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z"
      fill-rule="evenodd"
      clip-rule="evenodd"></path>
  </svg>
  <svg
    id="theme-toggle-dark-icon"
    class="w-5 h-5 hidden"
    fill="currentColor"
    viewBox="0 0 20 20"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path d="M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z"></path>
  </svg>
</button>

<script is:inline define:vars={{ strings }}>
  const updateIconAndLabel = () => {
    const isDark = document.documentElement.classList.contains('dark');
    const toggleButton = document.getElementById('theme-toggle');
    const lightIcon = document.getElementById('theme-toggle-light-icon');
    const darkIcon = document.getElementById('theme-toggle-dark-icon');

    if (isDark) {
      lightIcon?.classList.remove('hidden');
      darkIcon?.classList.add('hidden');
      toggleButton?.setAttribute('aria-label', strings.switchToLight);
    } else {
      lightIcon?.classList.add('hidden');
      darkIcon?.classList.remove('hidden');
      toggleButton?.setAttribute('aria-label', strings.switchToDark);
    }
  };

  const handleToggleClick = () => {
    const isDark = document.documentElement.classList.contains('dark');

    if (isDark) {
      localStorage.theme = 'light';
      document.documentElement.classList.remove('dark');
    } else {
      localStorage.theme = 'dark';
      document.documentElement.classList.add('dark');
    }

    updateIconAndLabel();
  };

  const setupThemeToggle = () => {
    updateIconAndLabel();

    const toggleButton = document.getElementById('theme-toggle');
    toggleButton?.addEventListener('click', handleToggleClick);
  };

  // Run on initial page load
  setupThemeToggle();

  // Run on view transitions (Astro's client-side navigation)
  document.addEventListener('astro:page-load', setupThemeToggle);
</script>
