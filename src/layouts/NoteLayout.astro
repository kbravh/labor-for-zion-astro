---
import type {Backlink} from '../utils/mdUtils';
import Backlinks from '../components/Backlinks.astro';
import Layout from './Layout.astro';
import type {Frontmatter} from '../validation/md';

interface Props {
  content: string;
  frontmatter: Frontmatter;
  backlinks: Backlink[];
}

const {frontmatter, backlinks, content} = Astro.props;
---

<Layout
  title={frontmatter.title}
  description={frontmatter.description}
>
  <main class="flex-grow max-w-3xl mx-auto">
    <article>
      <div class="border-slate-800 border-solid border-b-2 text-slate-800 p-4">
        <h1 class="text-[clamp(2rem,_10vw,_3rem)] font-body font-bold">
          {frontmatter.title}
        </h1>
        {
          frontmatter.description && (
            <p class="text-[clamp(1rem,_5vw,_1.5rem)] font-body">
              {frontmatter.description}
            </p>
          )
        }
      </div>
      <div class="flex justify-between gap-4 p-4 flex-wrap">
        <time datetime={frontmatter.date.toISOString()}>
          {frontmatter.date.toLocaleDateString('en-US', {dateStyle: 'medium'})}
        </time>
        {
          !!frontmatter.tags?.length && (
            <div class="flex gap-2">
              Tags:
              <ul>
                {frontmatter.tags.map(tag => (
                  <li class="inline-block bg-slate-300 dark:bg-slate-800 text-slate-900 dark:text-slate-100 rounded-md px-2 py-1 text-xs font-bold mr-2">
                    {tag}
                  </li>
                ))}
              </ul>
            </div>
          )
        }
      </div>

      <div
        class="prose prose-lg prose-slate dark:prose-invert min-w-full px-4 prose-hr:border-emerald-800"
        set:html={content}
      />

      {!!backlinks.length && <Backlinks backlinks={backlinks} />}
    </article>
  </main>
</Layout>
