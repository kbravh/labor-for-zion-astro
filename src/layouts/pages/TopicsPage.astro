---
import { getRelativeLocaleUrl } from "astro:i18n";
import Main from "@components/layout/Main.astro";
import PageWrapper from "@components/layout/PageWrapper.astro";
import PageTitle from "@components/typography/PageTitle.astro";
import Layout from "@layouts/Layout.astro";
import { getAvailableLocalizations, getLocale } from "@utils/i18n/main";
import { translations } from "@utils/i18n/translations";
import { getArticles, getNoteTopics } from "@utils/md/readAndParse";

const locale = getLocale(Astro.currentLocale);
const availableLocalizations = getAvailableLocalizations(locale, "/topics");

const { slugToTopic } = await getNoteTopics(locale);
const topics = Object.entries(slugToTopic);

// Get article counts per topic
const articles = await getArticles({ locale });
const topicCounts = new Map<string, number>();
for (const article of articles) {
  for (const tag of article.frontmatter.tags ?? []) {
    const count = topicCounts.get(tag) ?? 0;
    topicCounts.set(tag, count + 1);
  }
}

// Sort topics alphabetically
const sortedTopics = topics.sort((a, b) => a[1].localeCompare(b[1]));
---

<Layout title={translations[locale].route['/topics']} availableLocalizations={availableLocalizations}>
  <PageWrapper>
    <PageTitle>{translations[locale].route['/topics']}</PageTitle>
    <Main>
      <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4 mt-4 max-w-4xl w-full">
        {
          sortedTopics.map(([slug, topic]) => {
            const count = topicCounts.get(topic) ?? 0;
            return (
              <a
                href={getRelativeLocaleUrl(locale, `/topics/${slug}`)}
                class="group flex flex-col p-4 rounded-lg border border-slate-200 dark:border-slate-700 hover:border-slate-300 dark:hover:border-slate-600 transition-colors bg-white dark:bg-slate-800/50"
              >
                <h3 class="text-lg font-semibold text-slate-700 dark:text-slate-200 group-hover:text-emerald-600 dark:group-hover:text-emerald-400 transition-colors">
                  {topic}
                </h3>
                <p class="text-sm text-slate-500 dark:text-slate-400 mt-1">
                  {count} {count === 1 ? translations[locale].ui.note : translations[locale].ui.notes}
                </p>
              </a>
            );
          })
        }
      </div>
    </Main>
  </PageWrapper>
</Layout>
